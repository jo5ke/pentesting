

console.clear();


require('./bootstrap');
window.Vue = require('vue');
import router from './routes';
Vue.component('appMain', require('./components/Main').default);

import BootstrapVue from 'bootstrap-vue'

Vue.use(BootstrapVue);

import VeeValidate from 'vee-validate';

Vue.use(VeeValidate);

import Snotify, { SnotifyPosition } from 'vue-snotify';
Vue.use(Snotify);

//globally register mixin
import isLoggedMixin from './mixins/checkIfLoggedIn';
Vue.mixin(isLoggedMixin);



import {ClientTable,Event} from 'vue-tables-2';
Vue.use(ClientTable);

import daterangepicker from 'daterangepicker';

window.moment = require('moment');

//Vue instance
const app = new Vue({
    el: '#app',
    data:{
        user:null,
    },
    router,
    mounted(){
        this.user = null;
        this.checkIfLogged().then(response=>{
            
            
            let user_logged_in = response !== null;
            
            if(user_logged_in)
            {
                //set visible scans and schedule
                localStorage.setItem("tkn","r23");
                this.user = response;
            }
        }).catch(error => {
            this.user=null;
            throw error;
        })
    }
});


//logged in user restricting routes.. 

router.beforeEach((to,from,next)=>{
    if(to.matched.some(record => record.meta.alreadyLogged)){
        //this route req login 
        let user_logged_in = app.user !== null;
        if(user_logged_in)
        {   
            app.$snotify.warning("Already logged in!",{
                position: SnotifyPosition.centerTop,
                backdrop:0.5,
            });

            next({
                path:"/home"
            })
        }
        else{
            next()
        }
    }
    else
    {
        //not the route needed login
        next();
    }
})

//forbid few routes for not logged in users 
router.beforeEach((to,from,next)=>{
    if(to.matched.some(record => record.meta.notLogged)){
        //this route req login 
        let user_logged_in = app.user !== null; 
        if(!user_logged_in)
        {   
            app.$snotify.error("Not available for visitors","Please login!",{
                position: SnotifyPosition.centerTop,
                backdrop:0.5,
            });

            next({
                path:"/home"
            })
        }
        else{
            next()
        }
    }
    else
    {
        //not the route needed login
        next();
    }
})

//visitors not allowed
router.beforeEach((to,from,next)=>{
    if(to.matched.some(record => record.meta.visitorNotAllowed)){
        //this route req login 
        let user_not_logged_in = app.user === null;

        if(user_not_logged_in)
        {   
            //User logged in
            app.$snotify.error("Not available for visitors","Please login!",{
                position: SnotifyPosition.centerTop,
                backdrop:0.5,
            });

            next({
                path:"/userlogin"
            })
        }
        else{
            next()
        }
    }
    else
    {
        //not the route needed login
        next();
    }
})

//didn't go through forgot
router.beforeEach((to,from,next)=>{
    if(to.matched.some(record => record.meta.NotOnForgot)){
        //this route req login 

        if(!localStorage.getItem("goneThroughForgotPw"))
        {   
            
            app.$snotify.error("Please go to forgot password","Error!",{
                position: SnotifyPosition.centerTop,
                backdrop:0.5,
            });

            next({
                path:"/home"
            })
        }
        else{
            next()
        }
    }
    else
    {
        //not the route needed login
        next();
    }
})



