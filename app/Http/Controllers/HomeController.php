<?php

namespace App\Http\Controllers;

use Illuminate\Http\Request;
use Illuminate\Support\Facades\Auth;

class HomeController extends Controller
{
    /**
     * Create a new controller instance.
     *
     * @return void
     */
    public function __construct()
    {
        $this->middleware('auth');
    }

    /**
     * 
     * Show the application dashboard.
     *
     * @return \Illuminate\Http\Response
     */
    public function index()
    {
        return view('home');
    }

    public function logout(Request $request)
    {
       Auth::logout();
       return "logout"; 

    }

    public function recaptchaverify(Request $request)
    {
        $post_data = "secret=__secret-key__&response=".$_POST['g-recaptcha-response']."&remoteip=".$_SERVER['REMOTE_ADDR'] ;

        $ch = curl_init();  
        curl_setopt($ch, CURLOPT_URL, "https://www.google.com/recaptcha/api/siteverify");
        curl_setopt($ch, CURLOPT_POST, true);
        curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
        curl_setopt($ch, CURLOPT_HTTPHEADER, array('Content-Type: application/x-www-form-urlencoded; charset=utf-8', 'Content-Length: ' . strlen($post_data)));
        curl_setopt($ch, CURLOPT_POSTFIELDS, $post_data); 
        $googresp = curl_exec($ch);       
        $decgoogresp = json_decode($googresp);
        curl_close($ch);
    
        if ($decgoogresp->success == true)
        {
        // Captcha accepted
            $response = "ok";
            return $this->json($response);
        }
        else
        {
        // Let the user know ...
            $response = "wrong";
            return $this->json($response);
        }
    
    }

}
